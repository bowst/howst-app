# -*- mode: ruby -*-
# vi: set ft=ruby :

#libraries
require 'yaml'

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.require_version ">= 1.5.0"

howst = YAML::load_file "howst.yml"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  #GLOBAL CONFIGS
  config.vm.box = "bowst/howst"
  config.vm.network :private_network, type: "dhcp"
  config.nfs.map_uid = Process.uid
  config.nfs.map_gid = Process.gid

  #PER MACHINE CONFIGURATION
  howst["machines"].each do |machine|
    config.vm.define "#{machine['hostname']}" do |node|
      node.vm.hostname = "#{machine['hostname']}"
      # Share an additional folder to the guest VM.  
      # Docroot
      node.vm.synced_folder machine['host_docroot'], "/var/www/drupal", :create => true,
        :"mount_options" => ["dmode=770,fmode=770"] 
        
      #Drush files
      node.vm.synced_folder machine['path_to_drush_files'], "/home/vagrant/.drush", :create => true,
        :"mount_options" => ["dmode=770","fmode=770"]
        
      # An array of symbols representing groups of cookbook described in the Vagrantfile
      # to skip installing and copying to Vagrant's shelf.
      # config.berkshelf.except = []
      node.vm.network "forwarded_port", guest: 80, host: machine['port']
      
      #STEP TO PREP FOR EXISTING SITES
      if machine['is_existing_site']
        #create script to pull down the db
        $guest_script = <<-SCRIPT
          echo "Pulling Remote Database..."
          drush @#{machine['drush_alias']} sql-dump | tail -n +2 > /home/vagrant/db.sql
          echo "Updating local Database..."
          drush sql-cli < /home/vagrant/db.sql --db-url='mysql://root:#{machine['db_root_password']}@#{machine['db_host']}/#{machine['db_name']}'
          echo 'Database pulled successfully!'
        SCRIPT
        #create db script
        node.vm.provision "shell", inline: "echo \"#{$guest_script}\" > /home/vagrant/pull-db.sh"
        #add script as command
        node.vm.provision "shell", inline: "echo \"alias pull-db='sh /home/vagrant/pull-db.sh'\" >> /home/vagrant/.bashrc"
        #make the drupal root the landing directory
        node.vm.provision "shell", inline: "echo \"cd /var/www/drupal\" >> /home/vagrant/.bashrc"
        #file should be fine, use stage file proxy  
      end
      
      #update packages
      node.vm.provision "shell", inline: "sudo apt-get update"
      #Provision Dependency Stack

    end
  end
end
